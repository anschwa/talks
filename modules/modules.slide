Using Modules Replace
Golang Indianapolis _ _, 2019

Adam Schwartz
Software Engineer, Diagnotes
adam@anschwa.com

* The Trouble with Modules
* How do I develop my Go applications locally?

- Should I use `GOPATH`?
- When do I set `GO111MODULE`?
- How can I work off `master` but still version my app?
- How do I switch between developing a feature and debugging a release?
- How do I manage internal app dependencies?
- What are the best practices?

* Using Replace
* Scenario
You have two services: `authorizer` and `website`, both are using `modules`.

In production you have `website@v1.13.0`, which imports
`authorizer@v1.2.0`.

Locally, you are developing a feature for `authorizer` and want to
test it out on `website`. How do you do it?

* The Replace Directive
   $ cd /path/to/website
   $ cat go.mod

.code src/go.mod

* go mod edit

* Bonus: Mixing versioning and latest
    go get path/to/package@master
    go get -u ./...
    go mod tidy

.link https://github.com/golang/go/wiki/Modules


$ curl -i localhost:8080/user/42
> 200
$ curl -i localhost:8080/user/hello
> 404
